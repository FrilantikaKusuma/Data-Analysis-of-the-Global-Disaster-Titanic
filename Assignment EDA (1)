{"cells":[{"cell_type":"markdown","id":"9b09900f","metadata":{"id":"9b09900f"},"source":["## Titanic Sample Data Analysis\n","By: Frilantika Kusuma Wardani\n","\n","# By this project, I will analyze the sample datasets of Titanic passengers within 500 entries data. In this analysis, I will be using Exploratory and Explanatory Analysis, here is the steps:\n","\n","1. Explore the datasets with head, tail, sample and info to get a general review\n","2. Observe the datasets to get the summary statistical in order to explain info the data sample\n","3. Find the duplicate entries and how to solve it\n","4. Determine the missing value and check its percentages and how to manipulate to filled the missing entries"]},{"cell_type":"markdown","id":"7141cb6c","metadata":{"id":"7141cb6c"},"source":["## Import Libraries"]},{"cell_type":"code","execution_count":743,"id":"d81cf831","metadata":{"id":"d81cf831","executionInfo":{"status":"ok","timestamp":1745225139899,"user_tz":-420,"elapsed":13,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"outputs":[],"source":["#In this project I will use the Pandas for importing the dataset.\n","#Pandas is a Python library used for working with data sets. It has functions for analyzing, cleaning, exploring, and manipulating data\n","import pandas as pd\n"]},{"cell_type":"code","source":["# importing datasets\n","df = pd.read_excel('titanic.xlsx')"],"metadata":{"id":"JF88ruFsF5va","executionInfo":{"status":"ok","timestamp":1745225139955,"user_tz":-420,"elapsed":54,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"id":"JF88ruFsF5va","execution_count":744,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i3kDdOxcIBfy","executionInfo":{"status":"ok","timestamp":1745225142908,"user_tz":-420,"elapsed":2949,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"outputId":"de30d2fa-e2a0-43c4-fbd6-21bd3dabd14a"},"id":"i3kDdOxcIBfy","execution_count":745,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"bDrh5y3yHZd4","executionInfo":{"status":"ok","timestamp":1745225142913,"user_tz":-420,"elapsed":11,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"outputId":"47a2a154-2a0a-4fbc-b41f-e5aaabd0b376"},"id":"bDrh5y3yHZd4","execution_count":746,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     survived                                             name     sex  \\\n","0           1                    Allen, Miss. Elisabeth Walton  female   \n","1           1                   Allison, Master. Hudson Trevor    male   \n","2           0                     Allison, Miss. Helen Loraine  female   \n","3           0             Allison, Mr. Hudson Joshua Creighton    male   \n","4           0  Allison, Mrs. Hudson J C (Bessie Waldo Daniels)  female   \n","..        ...                                              ...     ...   \n","495         1          Mallet, Mrs. Albert (Antoinette Magnin)  female   \n","496         0                Mangiavacchi, Mr. Serafino Emilio    male   \n","497         0                       Matthews, Mr. William John    male   \n","498         0                        Maybery, Mr. Frank Hubert    male   \n","499         0                        McCrae, Mr. Arthur Gordon    male   \n","\n","         age  \n","0    29.0000  \n","1     0.9167  \n","2     2.0000  \n","3    30.0000  \n","4    25.0000  \n","..       ...  \n","495  24.0000  \n","496      NaN  \n","497  30.0000  \n","498  40.0000  \n","499  32.0000  \n","\n","[500 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-fa431d0f-236e-4a6a-a17f-acea7fd96c29\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Allen, Miss. Elisabeth Walton</td>\n","      <td>female</td>\n","      <td>29.0000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Allison, Master. Hudson Trevor</td>\n","      <td>male</td>\n","      <td>0.9167</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>Allison, Miss. Helen Loraine</td>\n","      <td>female</td>\n","      <td>2.0000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>Allison, Mr. Hudson Joshua Creighton</td>\n","      <td>male</td>\n","      <td>30.0000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>Allison, Mrs. Hudson J C (Bessie Waldo Daniels)</td>\n","      <td>female</td>\n","      <td>25.0000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>1</td>\n","      <td>Mallet, Mrs. Albert (Antoinette Magnin)</td>\n","      <td>female</td>\n","      <td>24.0000</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>0</td>\n","      <td>Mangiavacchi, Mr. Serafino Emilio</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>0</td>\n","      <td>Matthews, Mr. William John</td>\n","      <td>male</td>\n","      <td>30.0000</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>0</td>\n","      <td>Maybery, Mr. Frank Hubert</td>\n","      <td>male</td>\n","      <td>40.0000</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>0</td>\n","      <td>McCrae, Mr. Arthur Gordon</td>\n","      <td>male</td>\n","      <td>32.0000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows Ã— 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa431d0f-236e-4a6a-a17f-acea7fd96c29')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fa431d0f-236e-4a6a-a17f-acea7fd96c29 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fa431d0f-236e-4a6a-a17f-acea7fd96c29');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-76cd40c4-3412-48ea-b514-96b7d1431bcb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-76cd40c4-3412-48ea-b514-96b7d1431bcb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-76cd40c4-3412-48ea-b514-96b7d1431bcb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2c0b590c-5173-4948-9319-bc825d5e9587\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2c0b590c-5173-4948-9319-bc825d5e9587 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 499,\n        \"samples\": [\n          \"Jacobsohn, Mrs. Sidney Samuel (Amy Frances Christy)\",\n          \"Cleaver, Miss. Alice\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"male\",\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.766454299204053,\n        \"min\": 0.6667,\n        \"max\": 80.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          25.0,\n          62.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":746}]},{"cell_type":"code","execution_count":747,"id":"1f195200","metadata":{"id":"1f195200","outputId":"92729e78-2c55-4803-b724-3362698a02ed","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1745225142936,"user_tz":-420,"elapsed":21,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   survived                                             name     sex      age\n","0         1                    Allen, Miss. Elisabeth Walton  female  29.0000\n","1         1                   Allison, Master. Hudson Trevor    male   0.9167\n","2         0                     Allison, Miss. Helen Loraine  female   2.0000\n","3         0             Allison, Mr. Hudson Joshua Creighton    male  30.0000\n","4         0  Allison, Mrs. Hudson J C (Bessie Waldo Daniels)  female  25.0000"],"text/html":["\n","  <div id=\"df-17b49c64-c98c-4825-9074-4b1386862aef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Allen, Miss. Elisabeth Walton</td>\n","      <td>female</td>\n","      <td>29.0000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Allison, Master. Hudson Trevor</td>\n","      <td>male</td>\n","      <td>0.9167</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>Allison, Miss. Helen Loraine</td>\n","      <td>female</td>\n","      <td>2.0000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>Allison, Mr. Hudson Joshua Creighton</td>\n","      <td>male</td>\n","      <td>30.0000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>Allison, Mrs. Hudson J C (Bessie Waldo Daniels)</td>\n","      <td>female</td>\n","      <td>25.0000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-17b49c64-c98c-4825-9074-4b1386862aef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-17b49c64-c98c-4825-9074-4b1386862aef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-17b49c64-c98c-4825-9074-4b1386862aef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-35c7afba-65ac-4afb-8e35-97814f6c7040\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35c7afba-65ac-4afb-8e35-97814f6c7040')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-35c7afba-65ac-4afb-8e35-97814f6c7040 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 500,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 499,\n        \"samples\": [\n          \"Jacobsohn, Mrs. Sidney Samuel (Amy Frances Christy)\",\n          \"Cleaver, Miss. Alice\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"male\",\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.766454299204053,\n        \"min\": 0.6667,\n        \"max\": 80.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          25.0,\n          62.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":747}],"source":["# showing top 5 rows of data entries\n","df.head()"]},{"cell_type":"code","execution_count":748,"id":"1ae2a6de","metadata":{"id":"1ae2a6de","executionInfo":{"status":"ok","timestamp":1745225142954,"user_tz":-420,"elapsed":17,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"e52111f0-4311-4be1-9c7a-9856c35e1a71"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     survived                                     name     sex   age\n","495         1  Mallet, Mrs. Albert (Antoinette Magnin)  female  24.0\n","496         0        Mangiavacchi, Mr. Serafino Emilio    male   NaN\n","497         0               Matthews, Mr. William John    male  30.0\n","498         0                Maybery, Mr. Frank Hubert    male  40.0\n","499         0                McCrae, Mr. Arthur Gordon    male  32.0"],"text/html":["\n","  <div id=\"df-d5385fdf-6a2d-4af3-93c2-6e09b4960b1f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>495</th>\n","      <td>1</td>\n","      <td>Mallet, Mrs. Albert (Antoinette Magnin)</td>\n","      <td>female</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>0</td>\n","      <td>Mangiavacchi, Mr. Serafino Emilio</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>0</td>\n","      <td>Matthews, Mr. William John</td>\n","      <td>male</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>0</td>\n","      <td>Maybery, Mr. Frank Hubert</td>\n","      <td>male</td>\n","      <td>40.0</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>0</td>\n","      <td>McCrae, Mr. Arthur Gordon</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5385fdf-6a2d-4af3-93c2-6e09b4960b1f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d5385fdf-6a2d-4af3-93c2-6e09b4960b1f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d5385fdf-6a2d-4af3-93c2-6e09b4960b1f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c577dd00-dcbb-477f-86f5-ec3f030726bc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c577dd00-dcbb-477f-86f5-ec3f030726bc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c577dd00-dcbb-477f-86f5-ec3f030726bc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Mangiavacchi, Mr. Serafino Emilio\",\n          \"McCrae, Mr. Arthur Gordon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"male\",\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.60807586719967,\n        \"min\": 24.0,\n        \"max\": 40.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          30.0,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":748}],"source":["# showing the last 5 rows of data entries\n","df.tail()"]},{"cell_type":"code","source":["# showing sample 5 rows of the data entries\n","# the results change everytime the code is executed (random sample)\n","df.sample(5)"],"metadata":{"id":"9euc8PTqVyP1","executionInfo":{"status":"ok","timestamp":1745225142956,"user_tz":-420,"elapsed":3,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"35dfffaa-5f46-418b-b971-78ccc77350ce"},"id":"9euc8PTqVyP1","execution_count":749,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     survived                       name     sex   age\n","407         0      Faunthorpe, Mr. Harry    male  40.0\n","392         0  del Carlo, Mr. Sebastiano    male  29.0\n","151         1         Hassab, Mr. Hammad    male  27.0\n","491         0          Mack, Mrs. (Mary)  female  57.0\n","255         1       Sagesser, Mlle. Emma  female  24.0"],"text/html":["\n","  <div id=\"df-40eaefe0-5023-4fd9-82fa-fa7d5d0ead7e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>407</th>\n","      <td>0</td>\n","      <td>Faunthorpe, Mr. Harry</td>\n","      <td>male</td>\n","      <td>40.0</td>\n","    </tr>\n","    <tr>\n","      <th>392</th>\n","      <td>0</td>\n","      <td>del Carlo, Mr. Sebastiano</td>\n","      <td>male</td>\n","      <td>29.0</td>\n","    </tr>\n","    <tr>\n","      <th>151</th>\n","      <td>1</td>\n","      <td>Hassab, Mr. Hammad</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>491</th>\n","      <td>0</td>\n","      <td>Mack, Mrs. (Mary)</td>\n","      <td>female</td>\n","      <td>57.0</td>\n","    </tr>\n","    <tr>\n","      <th>255</th>\n","      <td>1</td>\n","      <td>Sagesser, Mlle. Emma</td>\n","      <td>female</td>\n","      <td>24.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40eaefe0-5023-4fd9-82fa-fa7d5d0ead7e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-40eaefe0-5023-4fd9-82fa-fa7d5d0ead7e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-40eaefe0-5023-4fd9-82fa-fa7d5d0ead7e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c6ed120f-132e-49c1-9964-9abb3c1d218f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c6ed120f-132e-49c1-9964-9abb3c1d218f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c6ed120f-132e-49c1-9964-9abb3c1d218f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"del Carlo, Mr. Sebastiano\",\n          \"Sagesser, Mlle. Emma\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.501851724856113,\n        \"min\": 24.0,\n        \"max\": 57.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          29.0,\n          24.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":749}]},{"cell_type":"markdown","source":["Observations:\n","1. All columns has complete fromats and appropriately typed\n","2. Sex column is categoricals and seems to contain two distinct values (female OR male), but will confirm later\n","3. Survived column is numerical type and apparently the binary value (0,1)\n","4. No obvious on the data (column name vs its entries), all seems good"],"metadata":{"id":"MEJ7iRhasIjN"},"id":"MEJ7iRhasIjN"},{"cell_type":"code","source":["df.info()\n","# Check the result"],"metadata":{"id":"g90g8yh-WVsf","executionInfo":{"status":"ok","timestamp":1745225142965,"user_tz":-420,"elapsed":8,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"94495e25-7b13-4191-aa94-1837fa2c0634"},"id":"g90g8yh-WVsf","execution_count":750,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 500 entries, 0 to 499\n","Data columns (total 4 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   survived  500 non-null    int64  \n"," 1   name      500 non-null    object \n"," 2   sex       500 non-null    object \n"," 3   age       451 non-null    float64\n","dtypes: float64(1), int64(1), object(2)\n","memory usage: 15.8+ KB\n"]}]},{"cell_type":"markdown","source":["Observation:\n","1. Data contains 4 columns with 500 rows\n","2. There are 2 columns of categoricals (name and sex) and 2 columns of numericals (survived and age)\n","2. Only AGE column have missing values (49 missing data entries), they will be handled later\n","3. All dtypes seems OK (appropriate), given the corresponding column name. In order to Sex is naturally object."],"metadata":{"id":"ZyGK4AReucqw"},"id":"ZyGK4AReucqw"},{"cell_type":"markdown","source":["# Statistical Summary"],"metadata":{"id":"Y6i0kDGLvDFm"},"id":"Y6i0kDGLvDFm"},{"cell_type":"code","source":["df.columns\n","# Analyze the statistical summary by the columns"],"metadata":{"id":"ihZNjG06Wr8n","executionInfo":{"status":"ok","timestamp":1745225142998,"user_tz":-420,"elapsed":33,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"dc9352e5-f1c3-4560-9fab-ddb84a84068b"},"id":"ihZNjG06Wr8n","execution_count":751,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['survived', 'name', 'sex', 'age'], dtype='object')"]},"metadata":{},"execution_count":751}]},{"cell_type":"code","source":["# group column names based on type\n","# it will make our life easier onwards\n","categoricals = ['sex']\n","\n","numericals = ['survived', 'age']"],"metadata":{"id":"zqhuPbt84dOV","executionInfo":{"status":"ok","timestamp":1745225142999,"user_tz":-420,"elapsed":29,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"id":"zqhuPbt84dOV","execution_count":752,"outputs":[]},{"cell_type":"code","source":["df.describe(include='all')\n","# Display all the data sets by grouping"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"9IMaVhvJ8crL","executionInfo":{"status":"ok","timestamp":1745225143001,"user_tz":-420,"elapsed":4,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"outputId":"577fa838-6490-4489-81a9-a8257f9d93b7"},"id":"9IMaVhvJ8crL","execution_count":753,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          survived                            name   sex         age\n","count   500.000000                             500   500  451.000000\n","unique         NaN                             499     2         NaN\n","top            NaN  Eustis, Miss. Elizabeth Mussey  male         NaN\n","freq           NaN                               2   288         NaN\n","mean      0.540000                             NaN   NaN   35.917775\n","std       0.498897                             NaN   NaN   14.766454\n","min       0.000000                             NaN   NaN    0.666700\n","25%       0.000000                             NaN   NaN   24.000000\n","50%       1.000000                             NaN   NaN   35.000000\n","75%       1.000000                             NaN   NaN   47.000000\n","max       1.000000                             NaN   NaN   80.000000"],"text/html":["\n","  <div id=\"df-3967d7a9-e8f5-4621-a68e-f8ce4fe8d2c3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>500.000000</td>\n","      <td>500</td>\n","      <td>500</td>\n","      <td>451.000000</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>NaN</td>\n","      <td>499</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>NaN</td>\n","      <td>Eustis, Miss. Elizabeth Mussey</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>288</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.540000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35.917775</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.498897</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>14.766454</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.666700</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>47.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>80.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3967d7a9-e8f5-4621-a68e-f8ce4fe8d2c3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3967d7a9-e8f5-4621-a68e-f8ce4fe8d2c3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3967d7a9-e8f5-4621-a68e-f8ce4fe8d2c3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8718410c-8f7a-4698-a47c-f468197fdc35\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8718410c-8f7a-4698-a47c-f468197fdc35')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8718410c-8f7a-4698-a47c-f468197fdc35 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"# Display all the data sets by grouping\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 176.57318973803274,\n        \"min\": 0.0,\n        \"max\": 500.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.54,\n          1.0,\n          0.4988965780511867\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          499,\n          \"2\",\n          \"500\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"288\",\n          \"500\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 149.32763783521975,\n        \"min\": 0.6667,\n        \"max\": 451.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          35.917775388026605,\n          35.0,\n          451.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":753}]},{"cell_type":"code","source":["# syntax numerical statistical summary\n","df[numericals].describe()"],"metadata":{"id":"glTy9oLaYkjk","executionInfo":{"status":"ok","timestamp":1745225143004,"user_tz":-420,"elapsed":3,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":300},"outputId":"f81c9ae1-f42e-4426-f417-1df560590e75"},"id":"glTy9oLaYkjk","execution_count":754,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         survived         age\n","count  500.000000  451.000000\n","mean     0.540000   35.917775\n","std      0.498897   14.766454\n","min      0.000000    0.666700\n","25%      0.000000   24.000000\n","50%      1.000000   35.000000\n","75%      1.000000   47.000000\n","max      1.000000   80.000000"],"text/html":["\n","  <div id=\"df-61af9558-5389-40e2-9f2a-ba1bb9d51f54\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>500.000000</td>\n","      <td>451.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.540000</td>\n","      <td>35.917775</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.498897</td>\n","      <td>14.766454</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.666700</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>35.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>47.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>80.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61af9558-5389-40e2-9f2a-ba1bb9d51f54')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-61af9558-5389-40e2-9f2a-ba1bb9d51f54 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-61af9558-5389-40e2-9f2a-ba1bb9d51f54');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e04e8167-d386-4625-9b6c-77afe17a9150\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e04e8167-d386-4625-9b6c-77afe17a9150')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e04e8167-d386-4625-9b6c-77afe17a9150 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[numericals]\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 176.57318973803274,\n        \"min\": 0.0,\n        \"max\": 500.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.54,\n          1.0,\n          0.4988965780511867\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 149.32763783521975,\n        \"min\": 0.6667,\n        \"max\": 451.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          35.917775388026605,\n          35.0,\n          451.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":754}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n"],"metadata":{"id":"mSRVKcdPYPe5","executionInfo":{"status":"ok","timestamp":1745225143006,"user_tz":-420,"elapsed":2,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"id":"mSRVKcdPYPe5","execution_count":755,"outputs":[]},{"cell_type":"code","source":["plt.hist(df['age'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":499},"id":"P3fkwi7ael8w","executionInfo":{"status":"ok","timestamp":1745225143133,"user_tz":-420,"elapsed":126,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"outputId":"e15c2075-f0a1-4cf7-a4f7-d082161f034a"},"id":"P3fkwi7ael8w","execution_count":756,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([16., 10., 88., 88., 83., 68., 55., 35.,  6.,  2.]),\n"," array([ 0.6667 ,  8.60003, 16.53336, 24.46669, 32.40002, 40.33335,\n","        48.26668, 56.20001, 64.13334, 72.06667, 80.     ]),\n"," <BarContainer object of 10 artists>)"]},"metadata":{},"execution_count":756},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.hist(df['survived'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"X5wDVsIUey8F","executionInfo":{"status":"ok","timestamp":1745225143299,"user_tz":-420,"elapsed":165,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"outputId":"b45f0c5a-dd01-4cf9-f6e4-b18f1d7f3f9e"},"id":"X5wDVsIUey8F","execution_count":757,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([230.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 270.]),\n"," array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ]),\n"," <BarContainer object of 10 artists>)"]},"metadata":{},"execution_count":757},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"fOc-a4Iefj8F","executionInfo":{"status":"ok","timestamp":1745225143300,"user_tz":-420,"elapsed":3,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"id":"fOc-a4Iefj8F","execution_count":757,"outputs":[]},{"cell_type":"markdown","source":["Observation:\n","\n","\n","*   Overall, the minimum and maximum values make sense for each column\n","*   Mean~ to 50% (Median) in AGE is somewhat symmetrical distribution (values of variables appear at regular frequencies and often the mean, median, and mode all occur at the same point)\n","*   Survived column is boolean/binary column since the values is 1 or 0, no need to conclude its simmetricity. Only need to check balance level\n","\n","\n","\n","\n"],"metadata":{"id":"hTUJg3OQvduG"},"id":"hTUJg3OQvduG"},{"cell_type":"code","source":["# Syntax describe meethod on categorical data\n","df[categoricals].describe()"],"metadata":{"id":"_uyCapQuYvBK","executionInfo":{"status":"ok","timestamp":1745225143306,"user_tz":-420,"elapsed":8,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":175},"outputId":"6dd6aff4-e328-4e94-abd7-27499c293a95"},"id":"_uyCapQuYvBK","execution_count":758,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         sex\n","count    500\n","unique     2\n","top     male\n","freq     288"],"text/html":["\n","  <div id=\"df-2003317e-abdc-446a-9604-2b0f3cb13c9f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sex</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>500</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>male</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>288</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2003317e-abdc-446a-9604-2b0f3cb13c9f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2003317e-abdc-446a-9604-2b0f3cb13c9f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2003317e-abdc-446a-9604-2b0f3cb13c9f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5d1eefd6-ce09-4e76-b0b5-e268232dbbbc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5d1eefd6-ce09-4e76-b0b5-e268232dbbbc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5d1eefd6-ce09-4e76-b0b5-e268232dbbbc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[categoricals]\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          \"288\",\n          \"500\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":758}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"cSjNUwP4WuH8","executionInfo":{"status":"ok","timestamp":1745225143307,"user_tz":-420,"elapsed":1,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"id":"cSjNUwP4WuH8","execution_count":759,"outputs":[]},{"cell_type":"code","source":["plt.hist(df['sex'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":484},"id":"zKe3Tzxgf1-4","executionInfo":{"status":"ok","timestamp":1745225143452,"user_tz":-420,"elapsed":144,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"outputId":"138f31d0-37c7-4bdd-c9a3-d22b4b2f92a8"},"id":"zKe3Tzxgf1-4","execution_count":760,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([212.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 288.]),\n"," array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ]),\n"," <BarContainer object of 10 artists>)"]},"metadata":{},"execution_count":760},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Observation:\n","\n","\n","*   Sex have 2 unique value, 'male' and 'female'\n","*   The most gender of the passenger in Titanic is male (288 rows) and the rest is female\n","\n","\n"],"metadata":{"id":"s4KVvpc31CHn"},"id":"s4KVvpc31CHn"},{"cell_type":"code","source":["categoricals\n","# check the categoricals entries"],"metadata":{"id":"QXmoM4v5Y_fC","executionInfo":{"status":"ok","timestamp":1745225143453,"user_tz":-420,"elapsed":46,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9d8ddbbe-ad23-4a80-ff55-aba1b158407c"},"id":"QXmoM4v5Y_fC","execution_count":761,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['sex']"]},"metadata":{},"execution_count":761}]},{"cell_type":"code","source":["# showing the precise value counts\n","# this code is especially useful if we have many categorical columns\n","for col in categoricals:\n","    print(f'Column: {col}')\n","    print(df[col].value_counts())"],"metadata":{"id":"vG86iI1UaWms","executionInfo":{"status":"ok","timestamp":1745225143453,"user_tz":-420,"elapsed":14,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"60c877b1-852a-4666-80ea-5cddcd745718"},"id":"vG86iI1UaWms","execution_count":762,"outputs":[{"output_type":"stream","name":"stdout","text":["Column: sex\n","sex\n","male      288\n","female    212\n","Name: count, dtype: int64\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"GYu6iRmWF4ET"},"id":"GYu6iRmWF4ET"},{"cell_type":"code","source":["for col in numericals:\n","  print(f'====={col}=====')\n","  print(df[col].value_counts(), '\\n')\n","\n","  # review the datasets by numericals"],"metadata":{"id":"FdmVluAf1x87","executionInfo":{"status":"ok","timestamp":1745225143454,"user_tz":-420,"elapsed":13,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"155c8d1e-5fa2-4679-f6aa-de7e4e768759"},"id":"FdmVluAf1x87","execution_count":763,"outputs":[{"output_type":"stream","name":"stdout","text":["=====survived=====\n","survived\n","1    270\n","0    230\n","Name: count, dtype: int64 \n","\n","=====age=====\n","age\n","24.0000    23\n","30.0000    20\n","36.0000    19\n","18.0000    14\n","42.0000    14\n","           ..\n","12.0000     1\n","0.8333      1\n","0.6667      1\n","7.0000      1\n","3.0000      1\n","Name: count, Length: 73, dtype: int64 \n","\n"]}]},{"cell_type":"markdown","source":["# Cleaning Data"],"metadata":{"id":"TwG-c0_MawqP"},"id":"TwG-c0_MawqP"},{"cell_type":"markdown","source":["# 1. Duplicate Handling"],"metadata":{"id":"rfeq2Zfza1hL"},"id":"rfeq2Zfza1hL"},{"cell_type":"code","source":["len(df)\n","# Count the data string"],"metadata":{"id":"oTTigF46aoYc","executionInfo":{"status":"ok","timestamp":1745225143454,"user_tz":-420,"elapsed":8,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"06013324-4fc9-4e68-8c37-bb0c06f39ca7"},"id":"oTTigF46aoYc","execution_count":764,"outputs":[{"output_type":"execute_result","data":{"text/plain":["500"]},"metadata":{},"execution_count":764}]},{"cell_type":"code","source":["len(df.drop_duplicates())\n","# Find the duplicates data in the string"],"metadata":{"id":"cfR4peEma8d2","executionInfo":{"status":"ok","timestamp":1745225143454,"user_tz":-420,"elapsed":6,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"16cb4825-23c9-457b-d7df-154447a08c0c"},"id":"cfR4peEma8d2","execution_count":765,"outputs":[{"output_type":"execute_result","data":{"text/plain":["499"]},"metadata":{},"execution_count":765}]},{"cell_type":"code","source":["len(df.drop_duplicates()) / len(df)\n","# Analyze the percentage of duplicates data in datasets"],"metadata":{"id":"2gTnfqcfbDrQ","executionInfo":{"status":"ok","timestamp":1745225143455,"user_tz":-420,"elapsed":5,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"5fd66d05-651e-45f8-fd40-7441edf5ac2c"},"id":"2gTnfqcfbDrQ","execution_count":766,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.998"]},"metadata":{},"execution_count":766}]},{"cell_type":"code","source":["list(df.columns)\n","# Check the duplicates data by columns"],"metadata":{"id":"oWLsqaDdbLGB","executionInfo":{"status":"ok","timestamp":1745225143461,"user_tz":-420,"elapsed":6,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6d06b1be-026e-41a8-d891-6f602d57f477"},"id":"oWLsqaDdbLGB","execution_count":767,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['survived', 'name', 'sex', 'age']"]},"metadata":{},"execution_count":767}]},{"cell_type":"code","source":["# Step 1 : Track the rows of duplicates data within the original row\n","duplicates = df[df.duplicated(keep=False)]\n"],"metadata":{"id":"QVt3epOnbVoT","executionInfo":{"status":"ok","timestamp":1745225143462,"user_tz":-420,"elapsed":0,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"id":"QVt3epOnbVoT","execution_count":768,"outputs":[]},{"cell_type":"code","source":["duplicates\n","# display the duplicates"],"metadata":{"id":"4jqjXNz5wFsV","executionInfo":{"status":"ok","timestamp":1745225143503,"user_tz":-420,"elapsed":40,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":125},"outputId":"876ca615-aa97-4420-ea6f-196a8100ffd0"},"id":"4jqjXNz5wFsV","execution_count":769,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     survived                            name     sex   age\n","104         1  Eustis, Miss. Elizabeth Mussey  female  54.0\n","349         1  Eustis, Miss. Elizabeth Mussey  female  54.0"],"text/html":["\n","  <div id=\"df-d56f43f1-9b0d-4580-be84-e566e4220c3f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>104</th>\n","      <td>1</td>\n","      <td>Eustis, Miss. Elizabeth Mussey</td>\n","      <td>female</td>\n","      <td>54.0</td>\n","    </tr>\n","    <tr>\n","      <th>349</th>\n","      <td>1</td>\n","      <td>Eustis, Miss. Elizabeth Mussey</td>\n","      <td>female</td>\n","      <td>54.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d56f43f1-9b0d-4580-be84-e566e4220c3f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d56f43f1-9b0d-4580-be84-e566e4220c3f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d56f43f1-9b0d-4580-be84-e566e4220c3f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e60a62d9-80db-4735-a7a7-1fb42eaae752\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e60a62d9-80db-4735-a7a7-1fb42eaae752')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e60a62d9-80db-4735-a7a7-1fb42eaae752 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a48ac38e-f118-432b-9e09-9b8c1db96b59\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('duplicates')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a48ac38e-f118-432b-9e09-9b8c1db96b59 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('duplicates');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"duplicates","summary":"{\n  \"name\": \"duplicates\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Eustis, Miss. Elizabeth Mussey\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 54.0,\n        \"max\": 54.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          54.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":769}]},{"cell_type":"code","source":["duplicates.groupby(list(df.columns)).size()\n","# Count the total of duplicates"],"metadata":{"id":"-vdUqxtyyGt9","executionInfo":{"status":"ok","timestamp":1745225143509,"user_tz":-420,"elapsed":5,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":147},"outputId":"f2916c65-82cd-49ae-857f-958b7d0937fd"},"id":"-vdUqxtyyGt9","execution_count":770,"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived  name                            sex     age \n","1         Eustis, Miss. Elizabeth Mussey  female  54.0    2\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","    <tr>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <th>Eustis, Miss. Elizabeth Mussey</th>\n","      <th>female</th>\n","      <th>54.0</th>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":770}]},{"cell_type":"code","source":["duplicates.groupby(list(df.columns)).size().reset_index(name='total duplicates')\n","# display total duplicates"],"metadata":{"id":"WDVCC7ySyUP5","executionInfo":{"status":"ok","timestamp":1745225143513,"user_tz":-420,"elapsed":4,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":81},"outputId":"6811c557-3026-44e8-8b9c-bf6deb18ce47"},"id":"WDVCC7ySyUP5","execution_count":771,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   survived                            name     sex   age  total duplicates\n","0         1  Eustis, Miss. Elizabeth Mussey  female  54.0                 2"],"text/html":["\n","  <div id=\"df-f1cc9ff7-d69c-4a81-a5d1-afc410d9a357\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>name</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>total duplicates</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Eustis, Miss. Elizabeth Mussey</td>\n","      <td>female</td>\n","      <td>54.0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1cc9ff7-d69c-4a81-a5d1-afc410d9a357')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f1cc9ff7-d69c-4a81-a5d1-afc410d9a357 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f1cc9ff7-d69c-4a81-a5d1-afc410d9a357');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"# display total duplicates\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Eustis, Miss. Elizabeth Mussey\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 54.0,\n        \"max\": 54.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          54.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total duplicates\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2,\n        \"max\": 2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":771}]},{"cell_type":"code","source":["# Handling Drop Duplicate\n","df = df.drop_duplicates()"],"metadata":{"id":"LzU2ei10ynQh","executionInfo":{"status":"ok","timestamp":1745225143550,"user_tz":-420,"elapsed":21,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"id":"LzU2ei10ynQh","execution_count":772,"outputs":[]},{"cell_type":"code","source":["len(df.drop_duplicates()) / len(df)\n","# review the percentage of total duplicates by total datasets"],"metadata":{"id":"l664uSTU0NIT","executionInfo":{"status":"ok","timestamp":1745225143558,"user_tz":-420,"elapsed":9,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3b98a6ad-9d58-4c29-e0f6-90dbf18147fa"},"id":"l664uSTU0NIT","execution_count":773,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":773}]},{"cell_type":"markdown","source":["Telah dihandling drop duplikat"],"metadata":{"id":"78lm3WKy09VY"},"id":"78lm3WKy09VY"},{"cell_type":"markdown","source":["# 2. Missing Values Handling\n"],"metadata":{"id":"IjaSRJtu1Ael"},"id":"IjaSRJtu1Ael"},{"cell_type":"markdown","source":["# Identiifying Missing Value"],"metadata":{"id":"FILiIkQ02XYM"},"id":"FILiIkQ02XYM"},{"cell_type":"code","source":["df.isna().sum()\n","# Count the missing values"],"metadata":{"id":"deIfhJPJ02Ox","executionInfo":{"status":"ok","timestamp":1745225143601,"user_tz":-420,"elapsed":42,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":209},"outputId":"43e14767-6772-44de-bc10-3d6e05fc972e"},"id":"deIfhJPJ02Ox","execution_count":774,"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived     0\n","name         0\n","sex          0\n","age         49\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>survived</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>49</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":774}]},{"cell_type":"code","source":["df.isnull().sum()\n","# Identifying the total of missing values"],"metadata":{"id":"qC356Ht5jMW4","executionInfo":{"status":"ok","timestamp":1745225143601,"user_tz":-420,"elapsed":12,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":209},"outputId":"2c0e2938-131e-4d0f-cb4d-9904243f4ac5"},"id":"qC356Ht5jMW4","execution_count":775,"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived     0\n","name         0\n","sex          0\n","age         49\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>survived</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>49</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":775}]},{"cell_type":"code","source":["for column in df.columns:\n","    print(f\"========{column}==================\")\n","    display(df[column].value_counts())\n","    print()\n","# display the sum of datasets by columns"],"metadata":{"id":"sbDCqoH6jorx","executionInfo":{"status":"ok","timestamp":1745225143618,"user_tz":-420,"elapsed":22,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"d0f2db2a-104d-4c20-c4bf-5fa7adbe1114"},"id":"sbDCqoH6jorx","execution_count":776,"outputs":[{"output_type":"stream","name":"stdout","text":["========survived==================\n"]},{"output_type":"display_data","data":{"text/plain":["survived\n","1    269\n","0    230\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>survived</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>269</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>230</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","========name==================\n"]},{"output_type":"display_data","data":{"text/plain":["name\n","McCrae, Mr. Arthur Gordon                                1\n","Allen, Miss. Elisabeth Walton                            1\n","Allison, Master. Hudson Trevor                           1\n","Lehmann, Miss. Bertha                                    1\n","Laroche, Mrs. Joseph (Juliette Marie Louise Lafargue)    1\n","                                                        ..\n","Andrews, Mr. Thomas Jr                                   1\n","Andrews, Miss. Kornelia Theodosia                        1\n","Anderson, Mr. Harry                                      1\n","Allison, Mrs. Hudson J C (Bessie Waldo Daniels)          1\n","Allison, Mr. Hudson Joshua Creighton                     1\n","Name: count, Length: 499, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>McCrae, Mr. Arthur Gordon</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Allen, Miss. Elisabeth Walton</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Allison, Master. Hudson Trevor</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Lehmann, Miss. Bertha</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Laroche, Mrs. Joseph (Juliette Marie Louise Lafargue)</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Andrews, Mr. Thomas Jr</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Andrews, Miss. Kornelia Theodosia</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Anderson, Mr. Harry</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Allison, Mrs. Hudson J C (Bessie Waldo Daniels)</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Allison, Mr. Hudson Joshua Creighton</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>499 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","========sex==================\n"]},{"output_type":"display_data","data":{"text/plain":["sex\n","male      288\n","female    211\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>male</th>\n","      <td>288</td>\n","    </tr>\n","    <tr>\n","      <th>female</th>\n","      <td>211</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","========age==================\n"]},{"output_type":"display_data","data":{"text/plain":["age\n","24.0000    23\n","30.0000    20\n","36.0000    19\n","18.0000    14\n","42.0000    14\n","           ..\n","12.0000     1\n","0.8333      1\n","0.6667      1\n","7.0000      1\n","3.0000      1\n","Name: count, Length: 73, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24.0000</th>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>30.0000</th>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>36.0000</th>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>18.0000</th>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>42.0000</th>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12.0000</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0.8333</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0.6667</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7.0000</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.0000</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>73 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]}]},{"cell_type":"markdown","source":["\n","\n","*   There has 269 survivors and the rest is dead (230)\n","*   The most gender of in Titanic is male (288) and the rest is female (211)\n","*   The most of the Titanic's passengers AGE in range at 24-30 years old\n"],"metadata":{"id":"pM3-5pkX2iPL"},"id":"pM3-5pkX2iPL"},{"cell_type":"code","source":["total_rows = len(df)\n","total_rows\n","# display the actual datasets"],"metadata":{"id":"JILt4wNTkIEB","executionInfo":{"status":"ok","timestamp":1745225143623,"user_tz":-420,"elapsed":4,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0983420f-cf3f-4c27-bbe8-e88363167dc9"},"id":"JILt4wNTkIEB","execution_count":777,"outputs":[{"output_type":"execute_result","data":{"text/plain":["499"]},"metadata":{},"execution_count":777}]},{"cell_type":"code","source":["df.columns\n","# Handling the missing values by analyzing each column"],"metadata":{"id":"RQBq0OjxkjZr","executionInfo":{"status":"ok","timestamp":1745225143628,"user_tz":-420,"elapsed":4,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"2d937b4c-90f8-442c-d584-57c7f9ba0adb"},"id":"RQBq0OjxkjZr","execution_count":778,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['survived', 'name', 'sex', 'age'], dtype='object')"]},"metadata":{},"execution_count":778}]},{"cell_type":"code","source":["# percentage version\n","total_rows = len(df)\n","\n","# Counts and display the missing values on each other columns\n","for column in df.columns:\n","    missing_count = df[column].isna().sum()\n","    missing_percentage = (missing_count / total_rows) * 100\n","    print(f\"Column '{column}' has {missing_count} missing values ({missing_percentage:.2f}%)\") # .2f means 2 decimal\n"],"metadata":{"id":"Wt3v0Y-gkmIt","executionInfo":{"status":"ok","timestamp":1745225143631,"user_tz":-420,"elapsed":3,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"db0d862a-578b-49c6-f51f-46b4d847a1ed"},"id":"Wt3v0Y-gkmIt","execution_count":779,"outputs":[{"output_type":"stream","name":"stdout","text":["Column 'survived' has 0 missing values (0.00%)\n","Column 'name' has 0 missing values (0.00%)\n","Column 'sex' has 0 missing values (0.00%)\n","Column 'age' has 49 missing values (9.82%)\n"]}]},{"cell_type":"markdown","source":["The percentage of missing values below 20% so we handle numerically with median, categorical with mode. But the categorical data type does not have missing values, namely sex.\n"],"metadata":{"id":"4X3MtORbov0B"},"id":"4X3MtORbov0B"},{"cell_type":"markdown","source":["# Handling the Missing Values"],"metadata":{"id":"d92Vz73PRNDw"},"id":"d92Vz73PRNDw"},{"cell_type":"code","source":["df.info()\n","# Review the missing values"],"metadata":{"id":"TWF20VOIk9ep","executionInfo":{"status":"ok","timestamp":1745225143666,"user_tz":-420,"elapsed":35,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"d2233db6-fc38-44e7-91ca-b92633134ce4"},"id":"TWF20VOIk9ep","execution_count":780,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 499 entries, 0 to 499\n","Data columns (total 4 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   survived  499 non-null    int64  \n"," 1   name      499 non-null    object \n"," 2   sex       499 non-null    object \n"," 3   age       450 non-null    float64\n","dtypes: float64(1), int64(1), object(2)\n","memory usage: 19.5+ KB\n"]}]},{"cell_type":"code","source":["df['sex'].dtype\n","# find the type of value of \"sex\""],"metadata":{"id":"AqbQ70stlBFq","executionInfo":{"status":"ok","timestamp":1745225143667,"user_tz":-420,"elapsed":20,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9e516567-580c-44c3-f793-5dccdfa02d44"},"id":"AqbQ70stlBFq","execution_count":781,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('O')"]},"metadata":{},"execution_count":781}]},{"cell_type":"code","source":["df['sex'].mode()[0]\n","# find the mode of categoricals data"],"metadata":{"id":"_E5HHGvwlb60","executionInfo":{"status":"ok","timestamp":1745225143669,"user_tz":-420,"elapsed":2,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":36},"outputId":"192dca39-a9d3-4135-d663-ef6042603d80"},"id":"_E5HHGvwlb60","execution_count":782,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'male'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":782}]},{"cell_type":"code","source":["df['survived'].median()\n","# find the median of numerical data"],"metadata":{"id":"4OfZtPb2rjIX","executionInfo":{"status":"ok","timestamp":1745225143694,"user_tz":-420,"elapsed":25,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e3fa16a2-4e06-436d-a3d9-78f285b5da54"},"id":"4OfZtPb2rjIX","execution_count":783,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":783}]},{"cell_type":"code","source":["\n","# Handling missing value for EDA, without splitting\n","for column in df.columns:\n","    if df[column].dtype == 'object':\n","      # if the column type is categoricals, filled it with mode\n","        df[column].fillna(df[column].mode()[0], inplace=True)\n","    else: # Through the data type is only numericals, use the else:\n","          # if the column type is numericals, filled it with median\n","        df[column].fillna(df[column].median(), inplace=True)"],"metadata":{"id":"_QAdNT48lsld","executionInfo":{"status":"ok","timestamp":1745225143699,"user_tz":-420,"elapsed":4,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"88cfd978-e954-4979-dc2f-55b084f0b96e"},"id":"_QAdNT48lsld","execution_count":784,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-784-fd20ffd0f4bc>:8: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[column].fillna(df[column].median(), inplace=True)\n","<ipython-input-784-fd20ffd0f4bc>:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df[column].fillna(df[column].median(), inplace=True)\n","<ipython-input-784-fd20ffd0f4bc>:5: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df[column].fillna(df[column].mode()[0], inplace=True)\n","<ipython-input-784-fd20ffd0f4bc>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df[column].fillna(df[column].mode()[0], inplace=True)\n"]}]},{"cell_type":"code","source":["df.isna().sum()\n","# showing the result of handling missing data"],"metadata":{"id":"Dr_4LYgdrKY4","executionInfo":{"status":"ok","timestamp":1745225143701,"user_tz":-420,"elapsed":2,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/","height":209},"outputId":"2a0505b1-2ded-4f4e-b8df-71aa43d74f2c"},"id":"Dr_4LYgdrKY4","execution_count":785,"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived    0\n","name        0\n","sex         0\n","age         0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>survived</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":785}]},{"cell_type":"code","source":["df.info()\n","# Review the clear data"],"metadata":{"id":"EkybbP7Sr1NJ","executionInfo":{"status":"ok","timestamp":1745225143706,"user_tz":-420,"elapsed":4,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8bb56744-ae32-4bf4-c852-6a3d8c646cfc"},"id":"EkybbP7Sr1NJ","execution_count":786,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 499 entries, 0 to 499\n","Data columns (total 4 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   survived  499 non-null    int64  \n"," 1   name      499 non-null    object \n"," 2   sex       499 non-null    object \n"," 3   age       499 non-null    float64\n","dtypes: float64(1), int64(1), object(2)\n","memory usage: 19.5+ KB\n"]}]},{"cell_type":"markdown","source":["Success removing NULL values!"],"metadata":{"id":"1egyWBJRr80j"},"id":"1egyWBJRr80j"},{"cell_type":"markdown","source":["# Thankyou and see you in the next analysis!"],"metadata":{"id":"cylUP-906lRl"},"id":"cylUP-906lRl"},{"cell_type":"code","source":[],"metadata":{"id":"VzcRvlZmr6rt","executionInfo":{"status":"ok","timestamp":1745225143707,"user_tz":-420,"elapsed":1,"user":{"displayName":"Frilantika Kusuma Wardani","userId":"17156816329830333668"}}},"id":"VzcRvlZmr6rt","execution_count":786,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.4"},"colab":{"provenance":[{"file_id":"1tMY7dsb4x54lVVOJZ6pjkuNhwR17j_T8","timestamp":1745037191937}]}},"nbformat":4,"nbformat_minor":5}